#!/home/tgarrow/local/amuse/prerequisites//bin/python3.6
#This script was generated by the AMUSE framework
import sys
import os

if __name__ == '__main__':
    use_sockets = len(sys.argv) > 1
    if use_sockets:
        portnumber = int(sys.argv[1])
        host = sys.argv[2]
        usempi= sys.argv[3] == "true"
    else:
        usempi = True
        host = None
        portnumber = -1
        
    syspath = ('/home/tgarrow/local/amuse/amuse-11.2/build/lib/src','/home/tgarrow/local/amuse/amuse-11.2/build/lib','/home/tgarrow/local/amuse/amuse-11.2','/home/tgarrow/local/amuse/amuse-11.2/support3','/home/tgarrow/local/amuse/amuse-11.2/build/temp.linux-x86_64-3.6/codes/twobody','/home/tgarrow/local/lib/python3.6/site-packages','/home/tgarrow/local/lib64/python3.6/site-packages','/home/tgarrow/Repos/extreme-deconvolution/py','/home/tgarrow/Repos/streampepper','/home/tgarrow/local/amuse/amuse-11.2/src','/home/tgarrow/local/amuse/amuse-11.2/test','/home/tgarrow/local/lib/python3.6/site-packages/galpy-1.5.dev0-py3.6-linux-x86_64.egg','/home/tgarrow/local/lib/python3.6/site-packages/package_name-0.1-py3.6.egg','/home/tgarrow/local/amuse/prerequisites/lib/python36.zip','/home/tgarrow/local/amuse/prerequisites/lib/python3.6','/home/tgarrow/local/amuse/prerequisites/lib/python3.6/lib-dynload','/home/tgarrow/.local/lib/python3.6/site-packages','/home/tgarrow/local/amuse/prerequisites/lib/python3.6/site-packages','/home/tgarrow/local/amuse/prerequisites/lib/python3.6/site-packages/nose-1.3.0-py3.6.egg','/home/tgarrow/local/amuse/prerequisites/lib/python3.6/site-packages/h5py-2.4.0-py3.6-linux-x86_64.egg','/usr/local/lib/python3.6/site-packages','/home/tgarrow/local/lib64/python3.6/site-packages','/home/tgarrow/Repos/extreme-deconvolution/py','/home/tgarrow/Repos/streampepper','/home/tgarrow/local/amuse/amuse-11.2/build/temp.linux-x86_64-3.6/codes/twobody')
    existing_syspath = set(sys.path)
    for x in syspath:
        if not x in existing_syspath:
              sys.path.append(x)
    
    if usempi:
        from mpi4py import MPI
        from amuse.rfi.channel import MpiChannel
        MpiChannel.ensure_mpi_initialized()

    from amuse.rfi import core

    from amuse.community.twobody.interface import TwoBodyImplementation
    from amuse.community.twobody.interface import TwoBodyInterface

    instance = TwoBodyImplementation()

    from amuse.rfi.python_code import PythonImplementation

    x = PythonImplementation(instance, TwoBodyInterface)
    
    if use_sockets:
        x.start_socket(portnumber, host)
    else:
        x.start()
